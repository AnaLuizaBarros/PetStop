// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetStop_API.Data;

namespace PetStop_API.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetStop_API.Models.Adotante", b =>
                {
                    b.Property<int>("Adotante_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.Property<DateTime>("Dt_Nascimento")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int?>("Endereco_ID")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Adotante_ID");

                    b.HasIndex("Adotante_ID")
                        .HasDatabaseName("idx_id_adotante");

                    b.HasIndex("Cpf")
                        .HasDatabaseName("idx_adotante_cpf");

                    b.HasIndex("Endereco_ID");

                    b.HasIndex("Nome")
                        .HasDatabaseName("idx_adotante_nome");

                    b.ToTable("Adotante");
                });

            modelBuilder.Entity("PetStop_API.Models.Alergia", b =>
                {
                    b.Property<int>("Alergia_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Adotante_ID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int?>("Pessoa_ID")
                        .HasColumnType("int");

                    b.HasKey("Alergia_ID");

                    b.HasIndex("Adotante_ID");

                    b.HasIndex("Alergia_ID")
                        .HasDatabaseName("idx_id_alergia");

                    b.HasIndex("Pessoa_ID");

                    b.ToTable("Alergia");
                });

            modelBuilder.Entity("PetStop_API.Models.Animal", b =>
                {
                    b.Property<int>("Animal_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Especie_ID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int?>("Raca_ID")
                        .HasColumnType("int");

                    b.HasKey("Animal_ID")
                        .HasAnnotation("SqlServer:Identity", "1, 1");

                    b.HasIndex("Animal_ID")
                        .HasDatabaseName("idx_Animal_ID");

                    b.HasIndex("Especie_ID");

                    b.HasIndex("Raca_ID");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("PetStop_API.Models.Endereco", b =>
                {
                    b.Property<int>("Endereco_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("CHAR(2)");

                    b.HasKey("Endereco_ID");

                    b.HasIndex("Cidade")
                        .HasDatabaseName("idx_cidade");

                    b.HasIndex("Endereco_ID")
                        .HasDatabaseName("idx_Animal_ID");

                    b.HasIndex("Estado")
                        .HasDatabaseName("idx_estado");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("PetStop_API.Models.Especie", b =>
                {
                    b.Property<int>("Especie_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Especie_ID");

                    b.HasIndex("Nome")
                        .HasDatabaseName("idx_nome_especie");

                    b.ToTable("Especie");
                });

            modelBuilder.Entity("PetStop_API.Models.Pessoa", b =>
                {
                    b.Property<int>("Pessoa_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.Property<DateTime>("Dt_Nascimento")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int?>("Endereco_ID")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.HasKey("Pessoa_ID");

                    b.HasIndex("Cpf")
                        .HasDatabaseName("idx_cpf_pessoa");

                    b.HasIndex("Endereco_ID");

                    b.HasIndex("Nome")
                        .HasDatabaseName("idx_nome_pessoa");

                    b.HasIndex("Pessoa_ID")
                        .HasDatabaseName("idx_id_pessoa");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("PetStop_API.Models.Raca", b =>
                {
                    b.Property<int>("Raca_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao_Raca")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Raca_ID");

                    b.HasIndex("Raca_ID")
                        .HasDatabaseName("idx_id_raca");

                    b.ToTable("Raca");
                });

            modelBuilder.Entity("PetStop_API.Models.Adotante", b =>
                {
                    b.HasOne("PetStop_API.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("Endereco_ID");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("PetStop_API.Models.Alergia", b =>
                {
                    b.HasOne("PetStop_API.Models.Adotante", null)
                        .WithMany("Alergia")
                        .HasForeignKey("Adotante_ID");

                    b.HasOne("PetStop_API.Models.Pessoa", null)
                        .WithMany("Alergia")
                        .HasForeignKey("Pessoa_ID");
                });

            modelBuilder.Entity("PetStop_API.Models.Animal", b =>
                {
                    b.HasOne("PetStop_API.Models.Especie", "Especie")
                        .WithMany()
                        .HasForeignKey("Especie_ID");

                    b.HasOne("PetStop_API.Models.Raca", "Raca")
                        .WithMany()
                        .HasForeignKey("Raca_ID");

                    b.Navigation("Especie");

                    b.Navigation("Raca");
                });

            modelBuilder.Entity("PetStop_API.Models.Pessoa", b =>
                {
                    b.HasOne("PetStop_API.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("Endereco_ID");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("PetStop_API.Models.Adotante", b =>
                {
                    b.Navigation("Alergia");
                });

            modelBuilder.Entity("PetStop_API.Models.Pessoa", b =>
                {
                    b.Navigation("Alergia");
                });
#pragma warning restore 612, 618
        }
    }
}
